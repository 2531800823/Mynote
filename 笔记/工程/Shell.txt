取别名 	alias vi ='vim'  vim相当于vi   临时生效的  永久要写入要放在环境配置文件 （ ~ / .bashrc） 在里面写入别名

vim使用：
	vim 文件名  有就打开 没有就创建

		a 在光标字符前插入			A 直接跳到行尾插入
		i  在光标字符后插入			I 直接跳到行首插入
		o 在下一行输入并创建新的一行	O 在上一行输入并创建新的一行
		s 删除一个字符开始输入		S删除整行开始输入

		：  w  保存不退出    在w后面加文件名	 把文件另存为新文件名		
		：  q  不保存退出
		：wq  保存退出
		：x ==wq
		：  ！  强制    ：q！强制不保存退出。用于文件修改后不保存
			       ：wq！强制保存退出，只能是文件所有者和root用户可以用， 用于对文件没有写权限的时候，强制写入数据
		shift+ZZ   保存退出  Z 是大写

可视：   v  可以连着选择（用方向键） 就跟Windows的 shift常摁一样  然后选中 可以 x删除（剪切） 复制 粘贴啥的 不会复制  空格换行 粘贴直接在光标后面

移动光标：1）	hjkl  左下上右
	2）	gg  移动到文件首行，G 移动到文件末行    数字G指定到第几行 
	3）	^  ||    0 移动到行首，   $移动到行尾
	4）	：7  移动到第7行  超出就是到末行

删除和剪切：1）	x  在光标位置删除一个字符  10x 删除10个   大X 删除光标前面的字符
	2）	dd 从光标位置删除单行    2dd  从光标位置	删除2行  D  ||  d$删除光标后面所有内容  
	3）	1,2d  指定1~2 两行删除
		说是删除其实是剪切，只要不粘贴就是删除

粘贴：	1）	p 小写 粘贴在光标后面，是行就在下一行
	2）	P  大写  粘贴在光标前面，是行就在上一行
	3）	dG 从当前位置到行末   d是删除行 G是到文件末 那么就是可以gg 到行首了

撤销：	u 可以一直撤销到文件打开的时候
	ctrl+r  反撤销

复制：	yy 复制    3yy  复制3行 粘贴还是那个粘贴

替换：	r 替换光标所在字符  直接输入替换
	R 就成替换模式了，一直可以输入替换，知道Esc退回命令模式

缩进：	想右>>  反缩进 向左<< 


查找	/查找内容 和？查找内容   /是向下  ？是向上   n是下一个  N是上一个 】
	光标在 某个单词上  也可以摁 # 号 开始查找 N向上走 n向下走

帮助文档man：在一个单词上 摁# 然后shift+k 进入帮助文档   在shift+k之前摁 数字1~9 指定进那个查找  不指定就挨个 找到以第一个就不向下找了


替换	:1,10s/old/new/g   替换1~10行所有的old为 new  s代表替换  g代表所有（不加就是一个）
	:%s/old/new/g  把整篇文档 所有的old都换成new  s代表替换  g代表所有（不加就是一个）
	
	:1,10s/^/#/g 在1~10的行首都加上了 一个#号
	:1,10s/^#//g 把1~10行首个#都去掉
	替换//  注释的时候要用转义字符  :1,10s/ ^/ \/ \/ /g（加上）  和上面是一样的就是加上转义\  :1,10s/^\/\///g


字符替换	：ab  liushipeng  liushipeng521 当输入我名字的时候就会跳转成 521  要加空格或者回车就可以了
		:ab 源字符串 要替换的

分屏：如果分屏当前的 就直接	 ：sp 上下分屏，vsp左右分屏 ，操作的是同一个 改一个都会改
 	退出 加上  all 就是全部都退出  wqall    qall

分屏不同文件： vsp 文件名

切换：ctrl+w+k上边的  ctrl+w+j下面的   然后 ctrl+w+w 来回切换

	
显示行号	:set nu	 退出就失效了，在用户根目录中 执行  vim .vimrc  里面 写上 ：:set nu
	取消显示	:set  nonu
颜色	:syntax on  开启颜色   默认是开启的   off 是关闭

高亮显示	:set hlsearch    搜索的时候颜色显示的 颜色啥的 他就是他它变亮  no hlsearch 关闭

下方状态栏	:set ruler  显示 默认显示  noruler 不显示  就是行号那一块
下方显示模式	:set showmode 显示 默认显示  noshowmode 不显示  就是 那个插入了 替换了下边这个显示的

是否显示隐藏字符	:set list显示  nolist不显示 默认不显示，把文本中的 tab变成了^  回车变成了$   Windows里面tab是一样的  回车是M$

在vim中其他文件内容：  	:r 文件路径和名字   把文件内容全部导入在光标位置
在vim中执行系统命令：	！命令  然后执行命令 按任意键回去，不会影响到正在写的内容
	导入执行命令的结果	    加上 r  ：r ！命令    把结果导入在光标位置

设置快捷键	:map 快捷键  快捷键执行的命令   想永久生效就写在 根目录中  vim .vimrc 里面
	如： :map ^p I#<ESC>   就是按ctrl +p  相当于 按I大写在行首写 写入# 然后ESC（设置的时候要加上<>）退出  就是按下在行首加一个注释（因为linux中#是注释嘛） ^p的时候 要先Ctrl+v然后在按想要的按键p（不然有的按键是别的快捷键）^这个符号是ctrl+v 是蓝色的哦
	如： :map ^B ^x    ^x 这个^就是命令了 移动到首行，x是删除一个元素。  ^B的^是ctrl+v哦 蓝色的哦

多文件打开   vim -o 文件1 文件2   -o小写是 上下显示   -O大写是左右  按ctrl+w 上下或者左右来切换  别的什么都不变 就是分了窗口 还是该干嘛干嘛不影响


如果文件打开一直出现替换啥的 ，把文件的隐藏临时文件删除就好了。 rm -rf .文件名.swp 

ctrl +z退出

编译的时候 gcc -o liu liu.c -D_LOCK_   就传递了一个  _LOCK_ 的宏定义 -D

"#"是管理员  其他的都是$
sudo 可以从普通变成管理员	
	~$ su 临时管理员  用一次 sudo 好像是可以坚持5分钟,root用户不用sudo

 ; 可以执行多个命令但是有冲突  需要加一个 \ 表明该条命令未结束
				
用户名	/. w hoaml
主机名	hostname

快捷键：
	ctrl+c : 可以取消命令
	ctrl+d: 结束输入
	ctrl+l:清屏
帮助手册	命令  --help 直接显示   还有就是 man 命令  q退出 要自己退出

关机	sudo shutdown -h now  立即关机
重新启动	sudo shutdown -r now | | sudo reboot now 这两个要有管理员权限
定时关机	sudo shutdown -h +45 "可以打印字符提示一下，就关机了"  定时45分钟以后关机  ctrl+c : 可以取消命令
定时重启 和上面一样

 exit 关闭命令窗口
或者		-o  用多个命令加上他
补齐命令		TAB   按一下是文件补齐，两下是命令补齐
清屏		clear    或   ctrl+l
当前位置		pwd   查看当前文件位置
切换目录		cd   一个.是当前  .打开当前目录   ..  上一级  cd / 名/ 名 绝对路径   可以 cd ../..上一级的上一级。~ 是家目录 cd ~  。cd - 是来回切换最近换的文件夹。 可以用相对路径也可以绝对路径打开 
.	表示当前目录
..	表示当前目录的上一级
-	两个目录之间来回切换
ln  -s  路径	创建软连接（就是快捷方式） 路径必须是绝对路径
ln 文件名 硬链接名 	 目录不可以创建硬链接 只有文件可以 每创建了一个硬链接 ls -l 那个数字会+1 删掉一个就减1
wc 文件名字	查看目录属性  可以以不同的格式显示 二进制 八进制 十六进制的
du文件		查看当前目录的大小 加上 - h  不然看不懂呀 可以不加文件直接 du -h
df 文件 		显示文件大小啥的  -h 可以看懂 不然看不懂
which 解析命令	查看解析命令在那个文件下的  可以查一些外部命令 像cd内部的不行 ls就是外部的


显示当前目录文件	ls   ls -l 列表形式   -a  把 . 开头的文件也显示出来  可以一起使用 空格分开 -hl 显示多少K，lha是隐藏的文件也显示   也可以 ls  文件夹  显示文件夹里面的目录   ls / 打印出根目录的文件 也可以使用* 
		ll相当于 ls -l    ls -i   id也给你显示出来
查看命令存储为主	which   ls  查看文件所在的位置   输入命令可以查看  cd为空（因为他是shell内置命令）
查找		find  / -name 125   / 是文件路径  125是文件名字（名字加上通配符*? 就是模糊搜索，不加是精确） -name -i 就忽略大小写了（也可以-name）
	可以同时多个	-size 代替name了  +1是一块=512bit +1是大于一块
	命令一起用		-user  用户名    -mmin -5  文件在5分钟内修改的  +5是大于5分钟的 5就时在5分钟之间的
			-type f 所有文件   d所有目录（文件夹）   l是软连接  -inum id查找
更快查找		locate  文件名 只要包含文件名的都会出来 目录啥的都会找出来 他是一个索引库 不能直接搜索新创建的文件（因为索引库没有更新）可以收到更新 updatadb 要用管理员权限更新
查找文件里面的内容	grep liu 1.txt  还文件1种查找liu 包含这一行会显示出来   grep -n 显示行号  -v 反向搜索 不包含liu的行  加上^表示以liu开头 $是结尾 忽略大小写是什么 -i

创建快捷方式（软链接）ln  文件位置  创建的名字   在哪里执行就创建到哪里  可以把软连接直接当文件使用	
创建文件		touch   在文件名前加 . 变成隐藏文件  ls -a 可以查看。创建文件加上后缀 不加貌似是文本文件（txt） 创建文件夹在下面 
复制文件		cp	跟移动一样，就是一个是cp 一个是mv。但是要移动文件夹加上  -r  cp -r 。后面加 /aa就改名成aa了
移动		mv       mv a.txt qq   移动到qq 即可以是相对也可以是绝对 （也可以移动文件夹）qq 后面加 /aa就改名成aa了
删除		rm     -r 和 -d 删除文件夹   .文件名 删除隐藏文件
显示文件内容	cat  还有  head  还有  tail   还有 more   直接打印到终端上  -n可以显示行号
统计文件内容	wc  -c -w -l   行  单词  字符（字节）
查询历史命令	上 下箭头可以换来换去想要那个直接回车    history      显示所有历史命令(后面加参数可以显示多少行 )
显示历史命令容量	 echo $HISTSIZE  默认1000条  打印历史命令容量
修改历史命令容量	HISIZZE=1000   数字是改多少
查看用户信息	grep  "linux" /etc/passwd       因为passwd里面用户多，就只看Linux的
查看进程信息	ps -ef
打开文件		open
打印文件		echo "要打印进去的东西" >文件名称    （一个>是覆盖（重写），>>追加，在后面写） 打印到终端就是 echo hello 
输入一个串打印	echo -n 打印的东西    可以起到提示作用  不加“”多个空格显示一个，加“”保留格式
	>    可以把其他命令得到的结果写入文件   ls  >> liu.txt  只要命令有结果 后面的这个liu不存在就创建一个新的	根管道类似


临时改变用户	su -c  -m  -   -c表示执行一个命令后就结束，-m表示仍保留环境变量不变，-表示转换用户身份是，同时改用户的环境
查看时间		data  显示当前时间  -s 设置新时间，要管理员权限
查看磁盘情况	df  -a 列出所有系统文件（包括虚拟文件） -T显示物理文件系统的文件格式  -h 显示大小以 G、M、K显示  -k 列出磁盘分配情况  -l仅列出本地文件系统
查看目录文件磁盘块	du  -a 仅显示空闲文件数 -h 列出磁盘情况  -s 列出总空闲空间
添加用户	 	sudo  adduser 用户名     创建一个用户   -m加上 可以创建一个根目录 不加创建的用户没有家目录（就是home）  每一个用户都是在一个组中  -g 是给创建的新用户指定小组  -g a liu  把liu放a小组里
修改用户属性	usermod    修改用户属性
删除用户		userdel    删除一个用户  -r 删除家目录  -f强制删除
添加用户组	addgroup 要创建组的名称
系统用户改密码	passwd     u1   可以改自己用户的东西， 加上sudo 管理员   u1 是用户  回车后输入密码 注意是 新建的还是创建虚拟机的
切换用户		su 用户 root 输入一下密码就切换了 root用户执行什么都不用 sudo的		
kill  -l 显示所有支持的信号类型

好玩的开火车	sl  	在祖安B站那个 Ubuntu上看的 安装的 软件



通配符： 分类查找
	查找用他们可以很快，
匹配任意字符	*   例如：file_*.text  匹配到 file_wang.text 、file_Lee.text  *前面必须一样   1*.txt  前面是1 后面有一个或多个但是类型要txt
一个长度的字符	？ 例如：file_？.text 匹配到 file_w.text 、file_1.text  只要是1个的都打印 只可以匹配一个，字符可以 ？？就是两个了   
匹配其中一个字符	[ ]  可以把希望处理的文件列举出来  例如：file_[otr]1.text 匹配到 file_o1.text 、file_t1.text 、file_r1.text    也可以连着使用多个[otr ][123]  [1-4]是1到4之间
指定范围匹配字符	[ - ]  两边填从哪到哪   匹配a~z中和这个样式一样的所有文件，可以配合下面的除了a~z所有文件、1-4]是1到4之间  
除了他们都找	[^  ]  除了方括号里面的其他的都打印出来，匹配到的只能有一个字符0或多都不对  还用例如吗？ 自己想吧 

管道：	
	把多个命令连接起来
 |  	例如：ls /目录/目录 | wc -w(不知道wc、ls上去查)	第一个输出命令的结果就成了第二个的输入

输入输出重定向
新建模式	>file	如果文件不存在就创建一个新的，如果存在就把文件清空写入一个新的  例如:  ls  /（不是这个就是管道） >file(把ls下文件的目录都存储到新建的file文件中了)
追加模式	>>file	如果文件不存在创建，如果存在会在原有内容后面写入  例如： ls  / （不是这个就是管道） >>file（打开在上面文件在他后面继续写入）
输入源	<file	经常用于拿来统计， wc<file  把file中的内容传给wc命令（wc干嘛的上面查） 用wc是也可以省略<
将产生的错误信息输入到文件中	2>或&>（>>就变成了追加模式） 只有 > 的话是只能保存正确的 带上2>是错误的  &>这个是不管对错都输入   例如：ls file.txt 2>err.log,使用 ls 查看 如果文件不存在，将系统错误提示保存在err.log文件中 

命令置换：
`	Esc下面的  `  这个符号  例如：被 ` ` 包裹的内容在后，前面命令的输出，给包裹然后输入，和管道相似
$( )	和上面那个是一样的

获取联机帮助手册	man  要查的命令     查看这个命令的使用  q退出 上下键可操作
		查系统应用  man 2..     库函数  man 3 ..        man man可看里面的东西，想看man 里面那个文件的数字，man 数字

进程：
	（任务管理器）
 ps命令：R（带+是前台不加是后台运行）正在执行 S阻塞状态 T暂停执行 Z 不存在但暂时无法消除 D不可中断的进制  <高优先级的进程 N低优先级的进程 L有内存分页分配并锁在内存中
ps aux | grep out.c（后面加管道这些就是查看单个）  查看任务进程
	（监视进程）
 top命令：top 动态监视过程，看看运行了什么 renice -n 数字（变成多少）数字（第几个），可以改变进程的大小，Q建退出top命令
pstree命令：将所有行程以树形式显示 
kill命令杀死进程：终止进程  kill -l 显示当前系统中所有的信号 kill -10(默认15)  数字（进程的编号）


文件命令： 

file命令：显示出文件类型
mkdir命令： 创建一个目录（文件夹）   -p   可以一下创建多个嵌套的文件  例如mkdir -p 新建1/新建1/新建1  就一下创建了3层文件
rmdir命令	  删除空目录
rmdir命令	:  删除一个目录（文件夹）  -p   跟上面相同 就是一个是删除一个是创建  也可以用上面 rm -r 直接把头删除
in命令： 创建文件的链接  -s 表示创建软连接（软连接是绝对路径）硬链接删除了貌似可以找到哦  in -s 为那个文件创建 生成什么名字  使用 ls -l 可以查看
压缩：
gizp压缩： -l 查看压 缩信息，文件数 大小 压缩等比参数，并不进行解压缩   -d gzip文件解压和gunzip文件相同  -num  指定压缩比例 num为1~9个等级    （压缩以后文件夹就没有了）
gunzip解压：后边加压缩包名
tar命令：可以将多个文件合并为一个文件，用于备份和压缩，可以同时执行后面多个命令一起  -t显示归档文件中内容 -x释放归档文件(解压+vjf或-xvzf)  -u更新归档文件  -c创建一个新的归档文件（后缀.tar）  -v显示归档和释放的过程  -f用户指定归档的文件名，不然就是默认  -j由tar生成归档然后bzip压缩(后缀.bz)  -z由tar生成归档然后gzip压缩（后缀是.gz）  要给文件加上后缀
rar压缩： 要手动安装该软件  压缩 是-a  解压缩是 x  rar a 生成的名字 文件和目录   解压缩x 就是要解压缩的文件名 指定目录（没有指定就是解压到当前文件夹）
zip压缩： zip 名字 目录   解压缩：unzip 压缩包的名字 -d 指定目录

网络：
ifconfig命令：查看网卡什么的ip地址，子掩码啥的英文看不懂   eth1 指定网卡名称，只看哪一个    可以在windows cmd ~ipcomfig获取 在ping中看看是否连接
 dhclient   : 动态获取IP地址
ping命令：查看网络连接情况   -c 数字  打算ping几次，  ping  ip地址
nslookup命令： 根据域名获取IP地址    nslookup www.baidu.com  就可以看百度的域名啥了

Shell编程：chmod命令：赋予执行权限 	u+x(加上这个)   ./文件名执行（后面可以加文件名，来执行编辑好的命令对这个程序执行） 加减覆盖都有 查

 1、要以 .sh 结尾方便阅读？ 2、 可以把上面的命令写在一个文件里 然后执行这个文件 3、没有数据类型，任何赋值都解释为一串字符  4、打印的时候加上$然后赋值的变量名5、赋值的时候=两边不可以加空格
有四种变量 ：1、用户自定义变量（建议大写，调用时在变量前加$） 2、位置变量即命令行参数 3、预定义变量 4、环境变量
echo : 调用变量(输出 C语言printf类似) 用变量的时候要加上$    -n不换行 
unset : 删除变量内容
exit : 程序提前结束  
seq：列数字（其中一个） 格式：1 2 10 （把1~10之间的数字列出来 有两个间隔 就是 1 3 5 7 9）
精确匹配： ^要找的文件 以 : 结尾

第二种：位置变量：$0 脚本文件名 $1~$9分别包含一到九个命令参数（更多的话赋值语句加上 { } ） $#包含命令参数的个数 $@包含所有命令参数（$* 他两个一样） $? 包含前一个命令的退出状态 $$正在进行的ID

第三种: 环境变量：export显示常见的环境变量 都是英文 难搞 还有 env 也是一个效果

Shell程序和语句：  默认换行   如果不换行的话首行#！/bin/bash 在输出的时候 echo -n不换行，还有一个是\c 但是要把首行换成#!/bin/sh
1、说明性语句：以 # 号开始本行 后面的不执行 C语言中的 //
2、功能性语句：	 read 输入（C语言scanf类似）可以同时输入多个变量 例如：read a1 a2 a3
		expr 算术运算命令（有加减乘除 %  乘\*是通配符要加\转义）运算符两边要加上空格（算数运算要有空格=不能有）不然直接报错哦，可以直接输出结果不给变量， 例如：expr 3 + 5 \* 4（\*转义，是*） 直接输出就可以得到结果23，如果要是给变量就要：A=`expr 3 + 5 \* 4`   要用上命令置换了（算数运算要有空格=不能有）里面可以加变量运算和数字替换一下就行了
		test 测试语句 测试结果 $?  0是真 1是假，命令错误是2（用echo $?打印）  1、测试一个字符串的值是否相等 例如：text "$answer"="yes" 测试是否相等（不等是 != 、-z 变量名 是测试是否为0  -n 是测试是否不为0） 2、测试整数 例如 test $num -eq 18 测试变量是否为18（两个变量中间是 -q 是否相等 -ne 不相等 -gt前大于后 -ge前大于等于后 -lt 前小于后 -le 前小于等于后）
			 3、测试文件属性 例如: test -d tmp  测试tmp是否为一个目录名（-e 文件是否存在 -f是否为普通文件 -L是否符号链接  -r 是否存在切可读 -w 存在切可写 -x存在切可执行 -s存在切长度不为0， a  -nt  b 文件a是否比文件b更新，a -ot  b文件a比文件b更旧 ）文件名也可以换成绝对路径文件名，也可以判断环境变量
3、结构性语句：测试语句 分支 循环 循环控制 C语言中 自性领悟把
1)条件语句：
	if [表达式]  then 语句1 else 语句2  fi（结尾）（表达式为真执行语句1，假执行语句2,）else里面可以嵌套一个 if 语句 记得fi结尾，也可以和C一样不过这个是 elif 表达式 then 打印的东西，不是else if 表达式 
2)分支语句:
	case(不用switch了) 字符串变量  in （记得换行） 模式1)（命令表）；；模式2)（命令表）；；*) (命令n);  ; esac结尾 字符串匹配到1就执行命令表1（可以在模式里面输入多个来匹配用  |  隔开 ），是2就执行2，(这两个；；相当于break)，     *)相当于default  *)后面可以不加 ；；也可以加
3)循环语句：
	for 循环  变量名  in  单词表   （\n） do  命令表   done(结尾)  循环的次数有单词表决定，循环一次单词表就赋1个值给变量名，直到没有。单词表也可以是文件夹、目录，单词表也可以是 `seq 1 2 10`(上面查看seq用法)可以循环多次
	也可以   for( ( i=1;i<=10;i++) )   do  命令符 done(结尾) 循环10 次  如果要死循环 ( ( ; ; ) )不写内容  ctrl+c可以退出
	while循环 [命令表达式(判断循环的语句)]  （\n）do  命令表  done(结尾)  如果是死循环把命令表达式换成 true，ctrl+c可以退出
4)循环控制语句：
	break  n 	跳出n层个整个循环 ，不加 n 是直接跳出整个循环
	continue 马上转到最近循环的下一轮 ，加 n 则转到 n 层循环的下一轮

Shell函数： 没有类型，就只有一个函数名 1、例如：a( ) {  } 可以在函数里 (可以把接收的值执行命令赋值给定义的新变量 赋值加 ` ` 命令置换 )如: B=` grep"^$1:" `(要加命令置换, ^ : 上面有) 获取传进来的变量，在函数里进行什么命令要在后面加要执行的命令 在 ` 里面 。return B返回，传递值 函数名 $ 定义好的变量  打印接受 $?(是return返回的值) 如: C=$?
	2、也可以不用return 返回值，直接赋值的时候就可以接收，记得加  `  ` 命令置换包裹函数名 例如; b=`a $1 `   直接 b接收 调用传值传值 函数里也不用return了
函数变量作用域： 	1、全局变量： 和C语言不一样  默认就是全局变量
		2、局部变量：加 local 就变成局部变量了


ftp搭建服务器：  vsftpd  然后会提示你怎么安装   匿名输入用户名是：anonymous  密码无
	作用：用于文件的上传和下载  get 和 put 只可以    如果想操作就打包？
		修改配置服务器文件： cd 去etc目录  然后查看 ls -l vsftpd.conf  然后用sudo vim vsftpd.conf 来配置  linux第二天13  然后保存 sudo service vsftpd restart
	退出：bye ||  quit || exit

lftp 一个ftp的客户端工具软件 ：安装lftp
 	就可以操作目录了
	操作：put 上传  
		mput上传多个文件
		get 下载文件
		mget 下载多个文件
		mirror 下载整个目录及子目录
		mirror -R 上传整哥目录及子目录

p84 C语言高级编程-1











   
