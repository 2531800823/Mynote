函数、指针、结构体、"链表"
（有 # 的就是一个命令，不用分号，有 ； 的就是一个语句）

	system("pause"); 暂停的意思，等待用户信号不然控制台程序会一闪即过，你来不及看到执行结果。
	auto自动变量(默认的不写也没事)
	register 寄存器变量 
	static 静态存储   一直保留着知道程序结束
	extern	告诉编译器在后面定义了 别急着报错(有的编译器不用这个也不会报错)
	const   把常量变成只能读不能改
	stdin 标准输入流
	sizeof（） 判断变量或数据类型的字节大小
	free(p这个值不确定)  删除不连接的节点

typedef	为一种已存在的类型定义一个别名，并未定义的新类型（就是可以给结构体定义两个名字用）
struct 	结构体类型名字{ 成员列表 }变量名（也可以不在这在函数里来定义，变量名可以多个）；
union	共同体类型名字 成员列表 }变量名；    只有最后一次存入的值有作用，就是答案唯一
enum	枚举类型名字{ 描述一组有限个数据值组成的整形值得集合，例如星期一~七 }；enum  weeks  枚举名字   变量的值不能超过定义的范围，就是只能有定义的内容

 exit	异常退出
	
宏定义：

typedef	PI  char*	是在编译时处理的，下面那个是直接定义的，PI  a，b；是直接给两个都应以指针的二define是定义一个另一个是字符
#define 	PI  3.14 	 宏定义 可以printf（"%g",PI）;输出3.14的值（也可以定义公式，反正任何都行，连定义printf）
#define   A(x)  x;x;x;x;     A(A(printf("%d",数字)))；表示打印 4  *  4  个值，可以多定义多增加o
#define  M(y) y*y-3*y     调用k=M(5); 就等于 5*5+3*5 
#define  MAX(a,b)  (a>b)?a:b   可以这样调用，直接把实参传到形参中a和b都是形参
	可以进行值运算，例如#define   A(x)  x   调用实参可以A(x+1) 相当于x+1，如果x是字符串将全部+1，当然也可以  *  /。
#define  SQ(y)  (y)*(y)   就括号SQ(a+1)就相当于(a+1)*(a+1) , 如果不加（） SQ(y )  y*y 那么就等于 a+1*a+1,运算及不同结果也可想而知
	如果是  160/ SQ(y)就相当于 160 / y * y，不是先计算 y * y ，如果想先计算 y * y就要在加一个括号 ( ( y ) * ( y ) )
#undef   	结束语句

#if ( 0 )  这个是注释用的，当然也可以不 ，宏定义中的if语句，可以定义类似3.14的量为0 || 1来当开关 
	可以用做开关 例如：是1就是圆的面积		这里的语句将不会被执行，可以用做注释，如果是 #if( 1 )就执行
#else
	例如：是 0 就是正方形的面积
#endif

#ifdef   标识符  	如果定义了标识符就执行程序段1
程序段1	这个程序段也要宏定义哦，也可以如上边#if语句一样
#else		如果没有就执行程序段2，如果不用执行程序段2，就不写这接#endif
程序段2	这个程序段也要宏定义哦，也可以如上边#if语句一样
 #endif

#ifndef  标识符	如果没有定义标识符就执行程序段1
程序段1	这个程序段也要宏定义哦，也可以如上边#if语句一样
#else 		如果定义了就执行程序段2	
程序段2	这个程序段也要宏定义哦，也可以如上边#if语句一样
#endif

函数：
	#include<stdlib.h>定义杂项函数及内存分配函数
	#include<malloc.h>动态存储分配函数头文件
parr = new int [100]; //返回类型为 int* 类型(整数型指针)，分配大小为 sizeof(int) * 100;

而 malloc 则必须由我们计算要字节数，并且在返回后强行转换为实际类型的指针。
int* p;
p = (int *) malloc (sizeof(int));分配可以放得下100个整数的内存空间
 free（p）；释放动态内存  释放p的内存
calloc	申请并初始化一切系列内存空间
realloc	重新分配内存空间



	#include <string.h> 用一下函数 必须先定义
{
strlen(字符串)	("%d",strlen(字符串)) 查询字符串的长度，不算/0，可以if（i>strlen（字符串））然后就可以不算/0
strcpy（目的字符串，源字符串）   复制 拷贝，strcpy（a，b）把b的值复制给a，a要足够大，从a里面数据后面开始拷贝，/0也要拷贝
stract（目的字符串，源字符串）	   字符串连接操作
strcmp（字符串1，字符串2）	  比较两个字符串大小    例如：if（strcmp（a1，a2）==0）是否一样 ，if（strcmp（a1，a2）<0）代表1<2;else  1>2
}


文件：

"r"            打开文字文件只读          
"w"           创建文字文件只写         
"a"           增补, 如果文件不存在则创建一个     
"r+"          打开一个文字文件读/写        
"w+"         创建一个文字文件读/写          
"a+"         打开或创建一个文件增补          
"b"           二进制文件(可以和上面每一项合用)          
"t"           文这文件(默认项)  

“rt”　　　　　　只读打开一个文本文件，只允许读数据 
“wt”　　　　　　只写打开或建立一个文本文件，只允许写数据
“at”　　　　　　追加打开一个文本文件，并在文件末尾写数据
“rb”　　　　　　只读打开一个二进制文件，只允许读数据
“wb”　　　　 　 只写打开或建立一个二进制文件，只允许写数据
“ab” 　　　　 　追加打开一个二进制文件，并在文件末尾写数据
“rt+”　　　　　 读写打开一个文本文件，允许读和写
“wt+”　　　　　 读写打开或建立一个文本文件，允许读写
“at+”　　　　　 读写打开一个文本文件，允许读，或在文件末追加数 据
“rb+”　　　　　 读写打开一个二进制文件，允许读和写 
“wb+”　　　　　 读写打开或建立一个二进制文件，允许读和写
“ab+” 　　　　　读写打开一个二进制文件，允许读，或在文件末追加数据

fopen()	函数的用法fopen函数用于打开文件, 其调用格式为例如：FILE *fopen(char *filename, *type);fopen()函数中第一个形式参数表示文件名, 可以包含路径和文件名两部分
fopen函数用来打开一个文件，其调用的一般形式为： 文件指针名=fopen(文件名，使用文件方式)
 其中，“文件指针名”必须是被说明为FILE 类型的指针变量，“文件名”是被打开文件的文件名。 
“使用文件方式”是指文件的类型和操作要求。“文件名”是字符串常量或字符串数组。

字符读写函数：fgetc 和 putc
字符串读写函数： fgets 和 fputs
数据块读写函数：freed 和 fwrite
格式化读写函数：fscanf 和 fprinf
都是用<stdio.h>头函数的


fclose（fp） 把文件关掉
数据结构：

常用的时间复杂度所耗费的时间从大带小依次是：
	O(1) < O(logn) < O(nlog) < O(n^2) < O(n^3) < O(2^n) < O(n!) < O(n^n)

抽象数据类型：

	ADT 	 抽象数据类型名
	Data	数据元素之间逻辑关系的定义
	Operation		操作
	endADT




 